{"id":"oES2","dependencies":[{"name":"/home/joshua/Projects/iobroker.keenergy/node_modules/@sentry/types/esm/transport.js.map","includedInParent":true,"mtime":1640968286860},{"name":"/home/joshua/Projects/iobroker.keenergy/package.json","includedInParent":true,"mtime":1640968282582},{"name":"/home/joshua/Projects/iobroker.keenergy/node_modules/@sentry/types/package.json","includedInParent":true,"mtime":1640968286860}],"generated":{"js":"\"use strict\";var e;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Outcome=void 0,exports.Outcome=e,function(e){e.BeforeSend=\"before_send\",e.EventProcessor=\"event_processor\",e.NetworkError=\"network_error\",e.QueueOverflow=\"queue_overflow\",e.RateLimitBackoff=\"ratelimit_backoff\",e.SampleRate=\"sample_rate\"}(e||(exports.Outcome=e={}));"},"sourceMaps":{"js":{"mappings":[{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":0}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":13}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":17}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":19}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":26}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":41}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":49}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":62}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":63}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":70}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":74}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":82}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":95}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":97}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":105}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":113}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":115}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":124}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":127}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":129}},{"source":"../src/transport.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":140}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":1,"column":154}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":1,"column":156}},{"source":"../src/transport.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":1,"column":171}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":189}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":191}},{"source":"../src/transport.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":204}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":1,"column":220}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":1,"column":222}},{"source":"../src/transport.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":1,"column":236}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":253}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":255}},{"source":"../src/transport.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":272}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":1,"column":292}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":1,"column":294}},{"source":"../src/transport.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":1,"column":305}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":319}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":320}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":324}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":332}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":340}},{"source":"../src/transport.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":1,"column":342}}],"sources":{"../src/transport.ts":"import { DsnLike } from './dsn';\nimport { Event } from './event';\nimport { SentryRequestType } from './request';\nimport { Response } from './response';\nimport { SdkMetadata } from './sdkmetadata';\nimport { Session, SessionAggregates } from './session';\n\nexport enum Outcome {\n  BeforeSend = 'before_send',\n  EventProcessor = 'event_processor',\n  NetworkError = 'network_error',\n  QueueOverflow = 'queue_overflow',\n  RateLimitBackoff = 'ratelimit_backoff',\n  SampleRate = 'sample_rate',\n}\n\n/** Transport used sending data to Sentry */\nexport interface Transport {\n  /**\n   * Sends the event to the Store endpoint in Sentry.\n   *\n   * @param event Event that should be sent to Sentry.\n   */\n  sendEvent(event: Event): PromiseLike<Response>;\n\n  /**\n   * Sends the session to the Envelope endpoint in Sentry.\n   *\n   * @param session Session that should be sent to Sentry | Session Aggregates that should be sent to Sentry.\n   */\n  sendSession?(session: Session | SessionAggregates): PromiseLike<Response>;\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the transport should wait for events to be flushed. Omitting this parameter will\n   *   cause the transport to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  close(timeout?: number): PromiseLike<boolean>;\n\n  /**\n   * Increment the counter for the specific client outcome\n   */\n  recordLostEvent?(type: Outcome, category: SentryRequestType): void;\n}\n\n/** JSDoc */\nexport type TransportClass<T extends Transport> = new (options: TransportOptions) => T;\n\n/** JSDoc */\nexport interface TransportOptions {\n  /** Sentry DSN */\n  dsn: DsnLike;\n  /** Define custom headers */\n  headers?: { [key: string]: string };\n  /** Set a HTTP proxy that should be used for outbound requests. */\n  httpProxy?: string;\n  /** Set a HTTPS proxy that should be used for outbound requests. */\n  httpsProxy?: string;\n  /** HTTPS proxy certificates path */\n  caCerts?: string;\n  /** Fetch API init parameters */\n  fetchParameters?: { [key: string]: string };\n  /** The envelope tunnel to use. */\n  tunnel?: string;\n  /** Send SDK Client Reports. Enabled by default. */\n  sendClientReports?: boolean;\n  /**\n   * Set of metadata about the SDK that can be internally used to enhance envelopes and events,\n   * and provide additional data about every request.\n   * */\n  _metadata?: SdkMetadata;\n}\n"},"lineCount":null}},"error":null,"hash":"52dee4e54ce97b4c5f1d5795516798e0","cacheData":{"env":{}}}