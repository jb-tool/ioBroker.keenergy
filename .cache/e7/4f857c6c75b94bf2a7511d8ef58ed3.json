{"id":"w0ZA","dependencies":[{"name":"/home/joshua/Projects/iobroker.keenergy/node_modules/@sentry/utils/esm/node.js.map","includedInParent":true,"mtime":1640968286877},{"name":"/home/joshua/Projects/iobroker.keenergy/package.json","includedInParent":true,"mtime":1640968282582},{"name":"/home/joshua/Projects/iobroker.keenergy/node_modules/@sentry/utils/package.json","includedInParent":true,"mtime":1640968286877},{"name":"process","parent":"/home/joshua/Projects/iobroker.keenergy/node_modules/@sentry/utils/esm/node.js","resolved":"/home/joshua/Projects/iobroker.keenergy/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar e=require(\"process\");function r(){return\"[object process]\"===Object.prototype.toString.call(void 0!==e?e:0)}function o(e,r){return e.require(r)}function t(e){var r;try{r=o(module,e)}catch(c){}try{var t=o(module,\"process\").cwd;r=o(module,t()+\"/node_modules/\"+e)}catch(c){}return r}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.dynamicRequire=o,exports.isNodeEnv=r,exports.loadModule=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":0}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":4}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":6}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":14}},{"source":"../src/node.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":2,"column":25}},{"source":"../src/node.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":2,"column":34}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":2,"column":38}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":90},"generated":{"line":2,"column":44}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":2,"column":65}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":2,"column":72}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":2,"column":82}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":35},"generated":{"line":2,"column":91}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":59},"generated":{"line":2,"column":101}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":47},"generated":{"line":2,"column":105}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":73},"generated":{"line":2,"column":107}},{"source":"../src/node.ts","name":null,"original":{"line":12,"column":83},"generated":{"line":2,"column":109}},{"source":"../src/node.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":2,"column":112}},{"source":"../src/node.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":2,"column":121}},{"source":"../src/node.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":2,"column":123}},{"source":"../src/node.ts","name":null,"original":{"line":21,"column":41},"generated":{"line":2,"column":125}},{"source":"../src/node.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":2,"column":128}},{"source":"../src/node.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":2,"column":135}},{"source":"../src/node.ts","name":null,"original":{"line":23,"column":13},"generated":{"line":2,"column":137}},{"source":"../src/node.ts","name":null,"original":{"line":23,"column":21},"generated":{"line":2,"column":145}},{"source":"../src/node.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":2,"column":148}},{"source":"../src/node.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":2,"column":157}},{"source":"../src/node.ts","name":null,"original":{"line":39,"column":30},"generated":{"line":2,"column":159}},{"source":"../src/node.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":2,"column":162}},{"source":"../src/node.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":2,"column":166}},{"source":"../src/node.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":2,"column":168}},{"source":"../src/node.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":2,"column":172}},{"source":"../src/node.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":2,"column":174}},{"source":"../src/node.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":2,"column":176}},{"source":"../src/node.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":2,"column":183}},{"source":"../src/node.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":2,"column":186}},{"source":"../src/node.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":2,"column":192}},{"source":"../src/node.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":2,"column":196}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":200}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":204}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":206}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":208}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":215}},{"source":"../src/node.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":2,"column":226}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":2,"column":230}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":2,"column":232}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":2,"column":234}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":36},"generated":{"line":2,"column":241}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":41},"generated":{"line":2,"column":245}},{"source":"../src/node.ts","name":null,"original":{"line":50,"column":58},"generated":{"line":2,"column":262}},{"source":"../src/node.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":2,"column":265}},{"source":"../src/node.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":2,"column":271}},{"source":"../src/node.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":2,"column":275}},{"source":"../src/node.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":2,"column":282}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":284}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":291}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":306}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":314}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":327}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":328}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":335}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":339}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":347}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":362}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":364}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":372}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":382}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":384}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":392}},{"source":"../src/node.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":2,"column":403}}],"sources":{"../src/node.ts":"/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n"},"lineCount":null}},"error":null,"hash":"6631244a06bda6b9c7d8ae399d0af3e1","cacheData":{"env":{}}}